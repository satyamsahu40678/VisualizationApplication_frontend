{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satya\\\\OneDrive\\\\Desktop\\\\Projects\\\\SopifyLikeApp\\\\frontend\\\\src\\\\components\\\\Charts\\\\GeoDistributionChart.js\",\n  _s = $RefreshSig$();\n// src/components/Charts/GeoDistributionChart.js\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title as ChartTitle, Tooltip, Legend } from 'chart.js';\n\n// Register necessary components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, ChartTitle, Tooltip, Legend);\nconst Container = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n_c = Container;\nconst ChartTitleStyled = styled.h2`\n  text-align: center;\n  color: #333;\n  margin-bottom: 1.5rem;\n`;\n_c2 = ChartTitleStyled;\nconst LoadingText = styled.p`\n  text-align: center;\n  color: #666;\n  font-size: 1.2rem;\n`;\n_c3 = LoadingText;\nconst BackButton = styled.button`\n  display: block;\n  margin: 1rem auto;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  color: #fff;\n  background-color: #007bff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n_c4 = BackButton;\nfunction GeoDistributionChart() {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchGeoDistributionData = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/shopify/geo-distribution`);\n        const data = response.data || [];\n        if (data.length === 0) {\n          console.warn('No geographical distribution data found');\n          return;\n        }\n        const labels = data.map(item => item._id || 'Unknown');\n        const values = data.map(item => item.count);\n        setChartData({\n          labels,\n          datasets: [{\n            label: 'Customer Distribution by City',\n            data: values,\n            backgroundColor: 'rgba(54,162,235,0.2)',\n            borderColor: 'rgba(54,162,235,1)',\n            borderWidth: 1\n          }]\n        });\n      } catch (error) {\n        console.error('Error fetching geo distribution data', error);\n      }\n    };\n    fetchGeoDistributionData();\n  }, []);\n  if (!chartData) {\n    return /*#__PURE__*/_jsxDEV(LoadingText, {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {\n      onClick: () => navigate('/'),\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChartTitleStyled, {\n      children: \"Geographical Distribution of Customers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n_s(GeoDistributionChart, \"1KYcPXHVtWigJISa0EPS2GcoX/g=\", false, function () {\n  return [useNavigate];\n});\n_c5 = GeoDistributionChart;\nexport default GeoDistributionChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ChartTitleStyled\");\n$RefreshReg$(_c3, \"LoadingText\");\n$RefreshReg$(_c4, \"BackButton\");\n$RefreshReg$(_c5, \"GeoDistributionChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","styled","useNavigate","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","ChartTitle","Tooltip","Legend","jsxDEV","_jsxDEV","register","Container","div","_c","ChartTitleStyled","h2","_c2","LoadingText","p","_c3","BackButton","button","_c4","GeoDistributionChart","_s","chartData","setChartData","navigate","fetchGeoDistributionData","response","get","process","env","REACT_APP_API_URL","data","length","console","warn","labels","map","item","_id","values","count","datasets","label","backgroundColor","borderColor","borderWidth","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c5","$RefreshReg$"],"sources":["C:/Users/satya/OneDrive/Desktop/Projects/SopifyLikeApp/frontend/src/components/Charts/GeoDistributionChart.js"],"sourcesContent":["// src/components/Charts/GeoDistributionChart.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title as ChartTitle,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\n\r\n// Register necessary components\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    ChartTitle,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst Container = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ChartTitleStyled = styled.h2`\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst LoadingText = styled.p`\r\n  text-align: center;\r\n  color: #666;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  display: block;\r\n  margin: 1rem auto;\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1rem;\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n`;\r\n\r\nfunction GeoDistributionChart() {\r\n    const [chartData, setChartData] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchGeoDistributionData = async () => {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/shopify/geo-distribution`);\r\n                const data = response.data || [];\r\n\r\n                if (data.length === 0) {\r\n                    console.warn('No geographical distribution data found');\r\n                    return;\r\n                }\r\n\r\n                const labels = data.map((item) => item._id || 'Unknown');\r\n                const values = data.map((item) => item.count);\r\n\r\n                setChartData({\r\n                    labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Customer Distribution by City',\r\n                            data: values,\r\n                            backgroundColor: 'rgba(54,162,235,0.2)',\r\n                            borderColor: 'rgba(54,162,235,1)',\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                });\r\n            } catch (error) {\r\n                console.error('Error fetching geo distribution data', error);\r\n            }\r\n        };\r\n\r\n        fetchGeoDistributionData();\r\n    }, []);\r\n\r\n    if (!chartData) {\r\n        return <LoadingText>Loading chart data...</LoadingText>;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <BackButton onClick={() => navigate('/')}>Back to Home</BackButton>\r\n            <ChartTitleStyled>Geographical Distribution of Customers</ChartTitleStyled>\r\n            <Bar data={chartData} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default GeoDistributionChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}