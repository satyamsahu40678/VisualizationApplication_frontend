{"ast":null,"code":"// src/components/Charts/GeoDistributionChart.js\nimport React,{useEffect,useState}from'react';import{Bar}from'react-chartjs-2';import axios from'axios';import styled from'styled-components';import{useNavigate}from'react-router-dom';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';// Register necessary components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const Container=styled.div`\n  width: 80%;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;const ChartTitleStyled=styled.h2`\n  text-align: center;\n  color: #333;\n  margin-bottom: 1.5rem;\n`;const Message=styled.p`\n  text-align: center;\n  color: #666;\n  font-size: 1.2rem;\n`;const ErrorMessage=styled(Message)`\n  color: #ff6f61;\n`;const BackButton=styled.button`\n  display: block;\n  margin: 1rem auto;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  color: #fff;\n  background-color: #007bff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;const Input=styled.input`\n  display: block;\n  width: 100%;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;function GeoDistributionChart(){const[chartData,setChartData]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(false);const[search,setSearch]=useState('');const[rawData,setRawData]=useState([]);const navigate=useNavigate();useEffect(()=>{const fetchGeoDistributionData=async()=>{try{const response=await axios.get(`${process.env.REACT_APP_API_URL}/api/shopify/geo-distribution`);const data=response.data.data||[];setRawData(data);// Apply search filter if necessary\nconst filteredData=data.filter(item=>{const searchTerm=search.toLowerCase();return(item._id||'').toLowerCase().includes(searchTerm);});if(filteredData.length===0){setChartData(null);return;}const labels=filteredData.map(item=>item._id||'Unknown');const values=filteredData.map(item=>item.count);setChartData({labels,datasets:[{label:'Customer Distribution by City',data:values,backgroundColor:'rgba(54,162,235,0.2)',borderColor:'rgba(54,162,235,1)',borderWidth:1}]});setError(false);}catch(error){console.error('Error fetching geo distribution data',error);setChartData(null);setError(true);}finally{setLoading(false);}};fetchGeoDistributionData();},[search]);const handleSearchChange=event=>{setSearch(event.target.value);};if(loading){return/*#__PURE__*/_jsx(Message,{children:\"Loading chart data...\"});}if(error){return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(BackButton,{onClick:()=>navigate('/'),children:\"Back to Home\"}),/*#__PURE__*/_jsx(ErrorMessage,{children:\"There was an error fetching geographical distribution data.\"})]});}if(!chartData){return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(BackButton,{onClick:()=>navigate('/'),children:\"Back to Home\"}),/*#__PURE__*/_jsx(Message,{children:\"No geographical distribution data available to display.\"})]});}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(BackButton,{onClick:()=>navigate('/'),children:\"Back to Home\"}),/*#__PURE__*/_jsx(ChartTitleStyled,{children:\"Geographical Distribution of Customers\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",placeholder:\"Search by city\",value:search,onChange:handleSearchChange}),/*#__PURE__*/_jsx(Bar,{data:chartData})]});}export default GeoDistributionChart;","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","styled","useNavigate","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","Container","div","ChartTitleStyled","h2","Message","p","ErrorMessage","BackButton","button","Input","input","GeoDistributionChart","chartData","setChartData","loading","setLoading","error","setError","search","setSearch","rawData","setRawData","navigate","fetchGeoDistributionData","response","get","process","env","REACT_APP_API_URL","data","filteredData","filter","item","searchTerm","toLowerCase","_id","includes","length","labels","map","values","count","datasets","label","backgroundColor","borderColor","borderWidth","console","handleSearchChange","event","target","value","children","onClick","type","placeholder","onChange"],"sources":["C:/Users/satya/OneDrive/Desktop/Projects/VisualizationApplication/frontend/src/components/Charts/GeoDistributionChart.js"],"sourcesContent":["// src/components/Charts/GeoDistributionChart.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\n\r\n// Register necessary components\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst Container = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ChartTitleStyled = styled.h2`\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  text-align: center;\r\n  color: #666;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst ErrorMessage = styled(Message)`\r\n  color: #ff6f61;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  display: block;\r\n  margin: 1rem auto;\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1rem;\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n`;\r\n\r\nfunction GeoDistributionChart() {\r\n    const [chartData, setChartData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [rawData, setRawData] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchGeoDistributionData = async () => {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/shopify/geo-distribution`);\r\n                const data = response.data.data || [];\r\n\r\n                setRawData(data);\r\n\r\n                // Apply search filter if necessary\r\n                const filteredData = data.filter(item => {\r\n                    const searchTerm = search.toLowerCase();\r\n                    return (item._id || '').toLowerCase().includes(searchTerm);\r\n                });\r\n\r\n                if (filteredData.length === 0) {\r\n                    setChartData(null);\r\n                    return;\r\n                }\r\n\r\n                const labels = filteredData.map((item) => item._id || 'Unknown');\r\n                const values = filteredData.map((item) => item.count);\r\n\r\n                setChartData({\r\n                    labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Customer Distribution by City',\r\n                            data: values,\r\n                            backgroundColor: 'rgba(54,162,235,0.2)',\r\n                            borderColor: 'rgba(54,162,235,1)',\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                });\r\n                setError(false);\r\n            } catch (error) {\r\n                console.error('Error fetching geo distribution data', error);\r\n                setChartData(null);\r\n                setError(true);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchGeoDistributionData();\r\n    }, [search]);\r\n\r\n    const handleSearchChange = (event) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    if (loading) {\r\n        return <Message>Loading chart data...</Message>;\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Container>\r\n                <BackButton onClick={() => navigate('/')}>Back to Home</BackButton>\r\n                <ErrorMessage>There was an error fetching geographical distribution data.</ErrorMessage>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (!chartData) {\r\n        return (\r\n            <Container>\r\n                <BackButton onClick={() => navigate('/')}>Back to Home</BackButton>\r\n                <Message>No geographical distribution data available to display.</Message>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <BackButton onClick={() => navigate('/')}>Back to Home</BackButton>\r\n            <ChartTitleStyled>Geographical Distribution of Customers</ChartTitleStyled>\r\n            <Input \r\n                type=\"text\" \r\n                placeholder=\"Search by city\" \r\n                value={search} \r\n                onChange={handleSearchChange} \r\n            />\r\n            <Bar data={chartData} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default GeoDistributionChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}