{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satya\\\\OneDrive\\\\Desktop\\\\Projects\\\\SopifyLikeApp\\\\frontend\\\\src\\\\components\\\\Charts\\\\NewCustomersChart.js\",\n  _s = $RefreshSig$();\n// src/components/Charts/NewCustomersChart.js\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register necessary components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\nconst ChartContainer = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n_c = ChartContainer;\nconst ChartTitle = styled.h2`\n  text-align: center;\n  color: #333;\n  margin-bottom: 1.5rem;\n`;\n_c2 = ChartTitle;\nconst Message = styled.p`\n  text-align: center;\n  color: #666;\n  font-size: 1.2rem;\n`;\n_c3 = Message;\nconst ErrorMessage = styled(Message)`\n  color: #ff6f61;\n`;\n_c4 = ErrorMessage;\nconst BackButton = styled.button`\n  display: block;\n  margin: 1rem auto;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  color: #fff;\n  background-color: #007bff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n_c5 = BackButton;\nfunction NewCustomersChart() {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchNewCustomersData = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/shopify/new-customers`);\n        const data = response.data || [];\n        if (data.length === 0) {\n          console.warn('No new customers data found');\n          setChartData(null);\n        } else {\n          const labels = data.map(item => `${item._id.month}/${item._id.year}`);\n          const values = data.map(item => item.count);\n          setChartData({\n            labels,\n            datasets: [{\n              label: 'New Customers',\n              data: values,\n              fill: false,\n              backgroundColor: 'rgba(255,159,64,0.6)',\n              borderColor: 'rgba(255,159,64,1)'\n            }]\n          });\n        }\n        setError(false);\n      } catch (error) {\n        console.error('Error fetching new customers data', error);\n        setChartData(null);\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchNewCustomersData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ChartContainer, {\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: () => navigate('/'),\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: \"There was an error fetching new customers data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n  if (!chartData) {\n    return /*#__PURE__*/_jsxDEV(ChartContainer, {\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: () => navigate('/'),\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: \"No new customers data available to display.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {\n      onClick: () => navigate('/'),\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartTitle, {\n      children: \"New Customers Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(NewCustomersChart, \"3NyDtuVmgzOKHRxaO0bdl4Pw7A4=\", false, function () {\n  return [useNavigate];\n});\n_c6 = NewCustomersChart;\nexport default NewCustomersChart;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ChartContainer\");\n$RefreshReg$(_c2, \"ChartTitle\");\n$RefreshReg$(_c3, \"Message\");\n$RefreshReg$(_c4, \"ErrorMessage\");\n$RefreshReg$(_c5, \"BackButton\");\n$RefreshReg$(_c6, \"NewCustomersChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","styled","useNavigate","Chart","ChartJS","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ChartContainer","div","_c","ChartTitle","h2","_c2","Message","p","_c3","ErrorMessage","_c4","BackButton","button","_c5","NewCustomersChart","_s","chartData","setChartData","loading","setLoading","error","setError","navigate","fetchNewCustomersData","response","get","process","env","REACT_APP_API_URL","data","length","console","warn","labels","map","item","_id","month","year","values","count","datasets","label","fill","backgroundColor","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c6","$RefreshReg$"],"sources":["C:/Users/satya/OneDrive/Desktop/Projects/SopifyLikeApp/frontend/src/components/Charts/NewCustomersChart.js"],"sourcesContent":["// src/components/Charts/NewCustomersChart.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LineElement,\r\n    PointElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\n\r\n// Register necessary components\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    LineElement,\r\n    PointElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst ChartContainer = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ChartTitle = styled.h2`\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  text-align: center;\r\n  color: #666;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nconst ErrorMessage = styled(Message)`\r\n  color: #ff6f61;\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  display: block;\r\n  margin: 1rem auto;\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1rem;\r\n  color: #fff;\r\n  background-color: #007bff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n`;\r\n\r\nfunction NewCustomersChart() {\r\n  const [chartData, setChartData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchNewCustomersData = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/shopify/new-customers`);\r\n        const data = response.data || [];\r\n\r\n        if (data.length === 0) {\r\n          console.warn('No new customers data found');\r\n          setChartData(null);\r\n        } else {\r\n          const labels = data.map((item) => `${item._id.month}/${item._id.year}`);\r\n          const values = data.map((item) => item.count);\r\n\r\n          setChartData({\r\n            labels,\r\n            datasets: [\r\n              {\r\n                label: 'New Customers',\r\n                data: values,\r\n                fill: false,\r\n                backgroundColor: 'rgba(255,159,64,0.6)',\r\n                borderColor: 'rgba(255,159,64,1)',\r\n              },\r\n            ],\r\n          });\r\n        }\r\n        setError(false);\r\n      } catch (error) {\r\n        console.error('Error fetching new customers data', error);\r\n        setChartData(null);\r\n        setError(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchNewCustomersData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Message>Loading chart data...</Message>;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <ChartContainer>\r\n        <BackButton onClick={() => navigate('/')}>Back to Home</BackButton>\r\n        <ErrorMessage>There was an error fetching new customers data.</ErrorMessage>\r\n      </ChartContainer>\r\n    );\r\n  }\r\n\r\n  if (!chartData) {\r\n    return (\r\n      <ChartContainer>\r\n        <BackButton onClick={() => navigate('/')}>Back to Home</BackButton>\r\n        <Message>No new customers data available to display.</Message>\r\n      </ChartContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ChartContainer>\r\n      <BackButton onClick={() => navigate('/')}>Back to Home</BackButton>\r\n      <ChartTitle>New Customers Over Time</ChartTitle>\r\n      <Line data={chartData} />\r\n    </ChartContainer>\r\n  );\r\n}\r\n\r\nexport default NewCustomersChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}